{
  "name": "grunt-sf-tooling",
  "description": "Grunt tasks to retrieve and updated SalesForce components via the Tooling API",
  "version": "0.1.2",
  "homepage": "https://github.com/starlight-consultants/grunt-sf-tooling",
  "author": {
    "name": "William Naslund",
    "email": "wnaslund@starlightconsultants.com"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:starlight-consultants/grunt-sf-tooling.git"
  },
  "bugs": {
    "url": "https://github.com/starlight-consultants/grunt-sf-tooling/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/starlight-consultants/grunt-sf-tooling/blob/master/LICENSE-MIT"
    }
  ],
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {},
  "devDependencies": {
    "grunt-contrib-jshint": "^0.9.2",
    "grunt-contrib-clean": "^0.5.0",
    "grunt-contrib-nodeunit": "^0.3.3",
    "grunt": "~0.4.5"
  },
  "peerDependencies": {
    "grunt": "~0.4.5"
  },
  "keywords": [
    "gruntplugin"
  ],
  "dependencies": {
    "request": "~2.37.0",
    "async": "~0.9.0"
  },
  "readme": "# grunt-sf-tooling\n\n> Grunt tasks to retrieve and update SalesForce components via the Tooling API.\n\n## Getting Started\nThis plugin requires Grunt `~0.4.5`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-sf-tooling --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-sf-tooling');\n```\n\n## The \"sfpush\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `sfpush` to the data object passed into `grunt.initConfig()`. This task lets you update components in SalesForce.\n\n```js\ngrunt.initConfig({\n  sf_password: 'Example Password',\n  sf_username: 'example@example.com',\n  sfpush: {\n    options: {\n      // Task-specific options go here.\n      classes: ['ExampleApexClass']\n    },\n    sandbox: {\n      options: {\n        // Organization specific options\n        loginServer: 'test.salesforce.com',\n        username: 'example@example.com.example'\n      }\n    },\n  },\n});\n```\n\n### Options\n\n#### options.apiVersion\nType: `String`\nDefault value: `'30.0'`\n\nA string value that sets the SalesForce api version used.\n\n#### options.classes\nType: `Array`\nDefault value: `[]`\n\nAn array that holds a list of Apex Classes to be saved.\n\n#### options.containerName\nType: `String`\nDefault value: `'SF Grunt Container'`\n\nA string value that is used as the Name of the MetadataContainer when saving SalesForce components.\n\n#### options.loginServer\nType: `String`\nDefault value: `'login.salesforce.com'`\n\nA string value that sets the server used to log into SalesForce.\n\n#### options.pages\nType: `Array`\nDefault value: `[]`\n\nAn array that holds a list of Apex Pages to be saved.\n\n#### options.password\nType: `String`\nDefault value: `null`\n\nA string value that sets the password used to log into SalesForce. It can be set globally with the `sf_password` attribute.\n\n#### options.triggers\nType: `Array`\nDefault value: `[]`\n\nAn array that holds a list of triggers to be saved.\n\n#### options.username\nType: `String`\nDefault value: `null`\n\nA string value that sets the username used to log into SalesForce. It can be set globally with the `sf_username` attribute.\n\n#### options.validate\nType: `Boolean`\nDefault value: `false`\n\nA boolean value that is used to control if SalesForce components are only validated and not saved.\n\n#### options.workingFolder\nType: `String`\nDefault value: `'./components/'`\n\nA string value that sets the path where SalesForce components are located.\n\n### Usage Examples\n\n*under construction*\n\n## The \"sfpull\" task\n\n### Overview\n\nIn your project's Gruntfile, add a section named `sfpull` to the data object passed into `grunt.initConfig()`. This task lets you download components from SalesForce.\n\n```js\ngrunt.initConfig({\n  sf_password: 'Example Password',\n  sf_username: 'example@example.com',\n  sfpull: {\n    options: {\n      // Task-specific options go here.\n      classes: ['ExampleApexClass']\n    },\n    sandbox: {\n      options: {\n        // Organization specific options\n        loginServer: 'test.salesforce.com',\n        username: 'example@example.com.example'\n      }\n    },\n  },\n});\n```\n\n### Options\n\n#### options.apiVersion\nType: `String`\nDefault value: `'30.0'`\n\nA string value that sets the SalesForce api version used.\n\n#### options.classes\nType: `Array`\nDefault value: `[]`\n\nA array that holds a list of Apex Classes to be pulled with the `sf_pull` task.\n\n#### options.containerName\nType: `String`\nDefault value: `'SF Grunt Container'`\n\nA string value that is used as the Name of the MetadataContainer when saving SalesForce components.\n\n#### options.loginServer\nType: `String`\nDefault value: `'login.salesforce.com'`\n\nA string value that sets the server used to log into SalesForce.\n\n#### options.pages\nType: `Array`\nDefault value: `[]`\n\nAn array that holds a list of Apex Pages to be downloaded.\n\n#### options.password\nType: `String`\nDefault value: `null`\n\nA string value that sets the password used to log into SalesForce. It can be set globally with the `sf_password` attribute.\n\n#### options.triggers\nType: `Array`\nDefault value: `[]`\n\nAn array that holds a list of Apex Triggers to be downloaded.\n\n#### options.username\nType: `String`\nDefault value: `null`\n\nA string value that sets the username used to log into SalesForce. It can be set globally with the `sf_username` attribute.\n\n#### options.workingFolder\nType: `String`\nDefault value: `'./components/'`\n\nA string value that sets the path where SalesForce components are located.\n\n### Usage Examples\n\n*under construction*\n",
  "readmeFilename": "README.md",
  "_id": "grunt-sf-tooling@0.1.2",
  "_from": "grunt-sf-tooling@"
}
